@startuml

package "infra" {
    class ExpressRouter {
    }
    class MySQLDataSource {
    }
}

package "interface adapter" {
    class UserHandler {
        -useCase: UserUseCase
        +get()
        +post()
        +put()
        +delete()
    }
    class UserRepositoryImpl {
        -dataSource: DataSource
        +create(user: User): Promise<User>
        +findAll(): Promise<User[]>
        +findWithId(id: number): Promise<User>
    }
    interface DBProvider {
        +dataSource: DataSource
    }
}

package "domain" {
    interface UserUseCase {
        +users(): Promise<UserViewModel[]>
        +userWithId(id: number): Promise<UserViewModel>
        +createUser(user: User): Promise<boolean>
    }
    interface UserRepository {
        +findAll(): Promise<User[]>
        +findWithId(id: number): Promise<User>
        +create(user: User): Promise<User>
    }
    class UserUseCaseImpl {
        -repository: UserRepository
        +users(): Promise<UserViewModel[]>
        +createUser(user: User): Promise<boolean>
        +userWithId(id: number): Promise<UserViewModel>
    }
    entity UserViewModel {
        id: number
        name: string
        mailAddress: string
        birthday: string
        createdAt: date
        updatedAt: date
    }
}
package "entity" {
    entity User {
        id: number
        name: string
        mailAddress: string
        birthday: string
        createdAt: date
        updatedAt: date
    }
}

ExpressRouter --> UserHandler
UserHandler --> UserUseCase
UserUseCase <|-- UserUseCaseImpl
UserRepository <|-- UserRepositoryImpl
UserUseCase --> UserRepository
UserRepository --> User

UserRepositoryImpl --> DBProvider
MySQLDataSource <|-- DBProvider

UserUseCase --> UserViewModel

'UserUseCaseImpl --> "1" IUserRepository

'UserHandler --> "1" User
'UserUseCaseImpl --> "1" User
'UserRepositoryImpl --> "1" User


@enduml
